"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4049],{5680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>d});var r=a(6540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),u=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},g=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),p=u(a),c=n,d=p["".concat(l,".").concat(c)]||p[c]||m[c]||o;return a?r.createElement(d,i(i({ref:t},g),{},{components:a})):r.createElement(d,i({ref:t},g))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:n,i[1]=s;for(var u=2;u<o;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},907:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=a(8168),n=(a(6540),a(5680));const o={sidebar_position:2},i="The JavaScript packages",s={unversionedId:"the_js_packages",id:"the_js_packages",title:"The JavaScript packages",description:"The javascript API has been through several iterations and is currently split over a few libraries. This page describes how all these pieces fit together.",source:"@site/docs/the_js_packages.md",sourceDirName:".",slug:"/the_js_packages",permalink:"/docs/the_js_packages",draft:!1,editUrl:"https://github.com/automerge/automerge.github.io/edit/main/docs/the_js_packages.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Concepts",permalink:"/docs/concepts"},next:{title:"Document Data Model",permalink:"/docs/documents/"}},l={},u=[{value:"Recommended Usage",id:"recommended-usage",level:2},{value:"The <code>next</code> API",id:"the-next-api",level:2},{value:"Differences from stable",id:"differences-from-stable",level:3},{value:"Using the next API",id:"using-the-next-api",level:3},{value:"Subpath Exports",id:"subpath-exports",level:4},{value:"The <code>{ next }</code> module",id:"the--next--module",level:4},{value:"How we got here",id:"how-we-got-here",level:2},{value:"Automerge Classic",id:"automerge-classic",level:3},{value:"<code>@automerge/automerge-wasm</code> and <code>@automerge/automerge</code>",id:"automergeautomerge-wasm-and-automergeautomerge",level:3},{value:"<code>@automerge/automerge-repo</code>",id:"automergeautomerge-repo",level:3}],g={toc:u},p="wrapper";function m(e){let{components:t,...a}=e;return(0,n.yg)(p,(0,r.A)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"the-javascript-packages"},"The JavaScript packages"),(0,n.yg)("p",null,"The javascript API has been through several iterations and is currently split over a few libraries. This page describes how all these pieces fit together."),(0,n.yg)("h2",{id:"recommended-usage"},"Recommended Usage"),(0,n.yg)("p",null,"If you just want to know how to use Automerge in greenfield applications, here's how the library is intended to be used:"),(0,n.yg)("p",null,"Install both the ",(0,n.yg)("inlineCode",{parentName:"p"},"@automerge/automerge")," and ",(0,n.yg)("inlineCode",{parentName:"p"},"@automerge/automerge-repo")," packages. Then install the networking and storage plugins you need (typically ",(0,n.yg)("inlineCode",{parentName:"p"},"@automerge/automerge-repo-network-*")," and ",(0,n.yg)("inlineCode",{parentName:"p"},"@automerge/automerge-repo-storage-*"),") packages. Take a look at the cookbook for examples of different ways of using these."),(0,n.yg)("p",null,"When you're making changes to an automerge document you should use ",(0,n.yg)("a",{parentName:"p",href:"#the-next-api"},"the ",(0,n.yg)("inlineCode",{parentName:"a"},"next")," API")),(0,n.yg)("h2",{id:"the-next-api"},"The ",(0,n.yg)("inlineCode",{parentName:"h2"},"next")," API"),(0,n.yg)("p",null,'Over time we have made a number of changes to the automerge API which are not backwards compatible. In order to not break compatibility we have exposed the new API under a sub module of the library, this submodule used to be called "unstable" to reflect that we were not sure about it - but we\'re now fairly sure we like it so we\'re calling it "next" in expectation that it\'s what the next major version of automerge will look like.'),(0,n.yg)("h3",{id:"differences-from-stable"},"Differences from stable"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"In the old API javascript strings are represented as scalar strings (see the ",(0,n.yg)("a",{parentName:"li",href:"/docs/documents/"},"data model"),' for details) whilst in "next" javascript strings are ',(0,n.yg)("inlineCode",{parentName:"li"},"Text")," sequences (i.e. they support concurrent insertions and deletions). This means that you should use ",(0,n.yg)("inlineCode",{parentName:"li"},"next.splice")," to modify strings in the ",(0,n.yg)("inlineCode",{parentName:"li"},"next")," API. Scalar strings in the ",(0,n.yg)("inlineCode",{parentName:"li"},"next")," API are represented as instances of the ",(0,n.yg)("inlineCode",{parentName:"li"},"RawString")," class."),(0,n.yg)("li",{parentName:"ul"},"The next API exposes the ",(0,n.yg)("inlineCode",{parentName:"li"},"diff")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"changeAt")," methods")),(0,n.yg)("h3",{id:"using-the-next-api"},"Using the next API"),(0,n.yg)("p",null,"There are two ways to use the next API"),(0,n.yg)("h4",{id:"subpath-exports"},"Subpath Exports"),(0,n.yg)("p",null,"If you are either using JavaScript in a modern browser or on node > 16 then you can do the following:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},'import { default as A } from "@automerge/automerge/next";\n')),(0,n.yg)("p",null,"Note that for this to work in typescript you will need to have the following in your ",(0,n.yg)("inlineCode",{parentName:"p"},"tsconfig.json")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'    ...\n    "module": "NodeNext",\n    "moduleResolution": "Node16",\n    ...\n')),(0,n.yg)("h4",{id:"the--next--module"},"The ",(0,n.yg)("inlineCode",{parentName:"h4"},"{ next }")," module"),(0,n.yg)("p",null,"If for whatever reason you can't use ",(0,n.yg)("inlineCode",{parentName:"p"},"@automerge/automerge/next")," then you can do this:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},'import { next as A } from "@automerge/automerge";\n')),(0,n.yg)("h2",{id:"how-we-got-here"},"How we got here"),(0,n.yg)("h3",{id:"automerge-classic"},"Automerge Classic"),(0,n.yg)("p",null,"The first version of automerge was implemented in pure javascript and is what we now call automerge Classic. You can find it ",(0,n.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/automerge"},"on NPM")," and ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/automerge/automerge-classic"},"GitHub"),". This project went through several iterations which changed quite dramatically."),(0,n.yg)("h3",{id:"automergeautomerge-wasm-and-automergeautomerge"},(0,n.yg)("inlineCode",{parentName:"h3"},"@automerge/automerge-wasm")," and ",(0,n.yg)("inlineCode",{parentName:"h3"},"@automerge/automerge")),(0,n.yg)("p",null,"More recently we rewrote automerge in Rust and deployed it to javascript by compiling to a wasm package at ",(0,n.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/@automerge/automerge-wasm"},(0,n.yg)("inlineCode",{parentName:"a"},"@automerge/automerge-wasm")),". This wasm package is something we currently consider to be an implementation detail and should not be depended on by third parties. The ",(0,n.yg)("inlineCode",{parentName:"p"},"@automerge/automerge")," package offers a very similar API to the original ",(0,n.yg)("inlineCode",{parentName:"p"},"automerge")," package but implemented by forwarding logic to ",(0,n.yg)("inlineCode",{parentName:"p"},"@automerge/automerge-wasm"),". It is consequently much faster."),(0,n.yg)("h3",{id:"automergeautomerge-repo"},(0,n.yg)("inlineCode",{parentName:"h3"},"@automerge/automerge-repo")),(0,n.yg)("p",null,"The core automerge libraries (both the original classic library and the WASM implementation) offer a compact storage format and a network agnostic sync protocol, but they don't actually do the work of wiring these things up to real storage engines (such as filesystems) or transports (such as websockets). ",(0,n.yg)("inlineCode",{parentName:"p"},"automerge-repo")," implements all of this plumbing and is how we recommend using automerge going forward."))}m.isMDXComponent=!0}}]);