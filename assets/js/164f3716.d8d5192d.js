"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3627],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(r),u=a,h=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return r?n.createElement(h,s(s({ref:t},c),{},{components:r})):n.createElement(h,s({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4743:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:2},s="Networking",i={unversionedId:"repositories/networking",id:"repositories/networking",title:"Networking",description:"There are many ways to talk to other peers. In automerge-repo this is captured by the NetworkAdapter interface. Unlike StorageAdapters a repository can have many (or zero) NetworkAdapters.",source:"@site/docs/repositories/networking.md",sourceDirName:"repositories",slug:"/repositories/networking",permalink:"/docs/repositories/networking",draft:!1,editUrl:"https://github.com/automerge/automerge.github.io/edit/main/docs/repositories/networking.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Storage",permalink:"/docs/repositories/storage"},next:{title:"DocHandles",permalink:"/docs/repositories/dochandles"}},p={},l=[{value:"Websockets",id:"websockets",level:2},{value:"Server",id:"server",level:3},{value:"Usage with <code>express</code>",id:"usage-with-express",level:4},{value:"Client",id:"client",level:3},{value:"MessageChannel",id:"messagechannel",level:2},{value:"BroadcastChannel",id:"broadcastchannel",level:2}],c={toc:l},m="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"networking"},"Networking"),(0,a.kt)("p",null,"There are many ways to talk to other peers. In ",(0,a.kt)("inlineCode",{parentName:"p"},"automerge-repo")," this is captured by the ",(0,a.kt)("a",{parentName:"p",href:"https://automerge.org/automerge-repo/classes/_automerge_automerge_repo.NetworkAdapter.html"},(0,a.kt)("inlineCode",{parentName:"a"},"NetworkAdapter"))," interface. Unlike ",(0,a.kt)("inlineCode",{parentName:"p"},"StorageAdapter"),"s a repository can have many (or zero) ",(0,a.kt)("inlineCode",{parentName:"p"},"NetworkAdapter"),"s. "),(0,a.kt)("p",null,'"network" is quite a broad term in ',(0,a.kt)("inlineCode",{parentName:"p"},"automerge-repo"),'. It really means "any other instance of ',(0,a.kt)("inlineCode",{parentName:"p"},"Repo"),' which I am communicating with by message passing". This means that as well as network adapters for obvious things like websockets, we also implement network adapters for less traditional channels such as ',(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel"},(0,a.kt)("inlineCode",{parentName:"a"},"MessageChannel"))," or ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel"},(0,a.kt)("inlineCode",{parentName:"a"},"BroadcastChannel")),"."),(0,a.kt)("h2",{id:"websockets"},"Websockets"),(0,a.kt)("p",null,"The websocket ",(0,a.kt)("inlineCode",{parentName:"p"},"NetworkAdapter")," has two parts. This is because the websocket protocol requires a server and a client. The parts are named ",(0,a.kt)("inlineCode",{parentName:"p"},"NodeWSServerAdapter")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"BrowserWebsocketClientAdapter"),", but don't take these names too seriously, they will both work in a browser or in Node."),(0,a.kt)("h3",{id:"server"},"Server"),(0,a.kt)("p",null,"The server side of the adapter is ",(0,a.kt)("a",{parentName:"p",href:"https://automerge.org/automerge-repo/classes/_automerge_automerge_repo_network_websocket.NodeWSServerAdapter.html"},(0,a.kt)("inlineCode",{parentName:"a"},"NodeWSServerAdapter")),", which should be used in combination with the ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/ws"},(0,a.kt)("inlineCode",{parentName:"a"},"ws"))," library. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { WebSocketServer } from "ws"\nimport { NodeWSServerAdapter } from "@automerge/automerge-repo-network-websocket"\n\nconst wss = new WebSocketServer({ port: 8080 })\nconst adapter = new NodeWSServerAdapter(wss)\n')),(0,a.kt)("h4",{id:"usage-with-express"},"Usage with ",(0,a.kt)("inlineCode",{parentName:"h4"},"express")),(0,a.kt)("p",null,"Often you aren't running the websocket server as a standalone thing but instead as part of an existing HTTP server. Here's an example of such a situation in an ",(0,a.kt)("inlineCode",{parentName:"p"},"express")," app."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'\nimport { WebSocketServer } from "ws"\nimport { NodeWSServerAdapter } from "@automerge/automerge-repo-network-websocket"\nimport express from "express"\n\nconst wss = new WebSocketServer({ noServer: true })\nconst server = express()\nserver.on("upgrade", (request, socket, head) => {\n  wss.handleUpgrade(request, socket, head, (socket) => {\n    wss.emit("connection", socket, request)\n  })\n})\nconst adapter = new NodeWSServerAdapter(wss)\nserver.listen(8080)\n')),(0,a.kt)("h3",{id:"client"},"Client"),(0,a.kt)("p",null,"The client side of the connection is ",(0,a.kt)("a",{parentName:"p",href:"https://automerge.org/automerge-repo/classes/_automerge_automerge_repo_network_websocket.BrowserWebSocketClientAdapter.html"},(0,a.kt)("inlineCode",{parentName:"a"},"BrowserWebsocketClientAdapter")),". "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { BrowserWebSocketClientAdapter } from "@automerge/automerge-repo-network-websocket"\n\nconst network =  new BrowserWebSocketClientAdapter("ws://localhost:3030")\n')),(0,a.kt)("h2",{id:"messagechannel"},"MessageChannel"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://automerge.org/automerge-repo/modules/_automerge_automerge_repo_network_messagechannel.html"},(0,a.kt)("inlineCode",{parentName:"a"},"@automerge/automerge-repo-network-messagechannel"))," is a ",(0,a.kt)("inlineCode",{parentName:"p"},"NetworkAdapter")," for communicating between processes within the same browser using a ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel"},(0,a.kt)("inlineCode",{parentName:"a"},"MessageChannel")),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { MessageChannelNetworkAdapter } from "@automerge/automerge-repo-network-messagechannel"\nimport { Repo } from "@automerge/automerge-repo"\n\nconst { port1: leftToRight, port2: rightToLeft } = new MessageChannel()\nconst rightToLeft = new MessageChannelNetworkAdapter(rightToLeft)\nconst leftToRight = new MessageChannelNetworkAdapter(leftToRight)\n\nconst left = new Repo({\n  network: [leftToRight],\n})\nconst right = new Repo({\n  network: [rightToLeft],\n})\n')),(0,a.kt)("h2",{id:"broadcastchannel"},"BroadcastChannel"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://automerge.org/automerge-repo/modules/_automerge_automerge_repo_network_broadcastchannel.html"},(0,a.kt)("inlineCode",{parentName:"a"},"@automerge/automerge-repo-network-broadcastchannel"))," is a ",(0,a.kt)("inlineCode",{parentName:"p"},"NetworkAdapter")," for commuicating between processes in the same browser using a ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel"},(0,a.kt)("inlineCode",{parentName:"a"},"BroadcastChannel")),". This will in general be quite inefficient because the sync protocol is point-to-point so even though ",(0,a.kt)("inlineCode",{parentName:"p"},"BroadcastChannel")," is a ",(0,a.kt)("em",{parentName:"p"},"broadcast")," channel, we still have to duplicate each message for every peer in the channel. It's better to use ",(0,a.kt)("inlineCode",{parentName:"p"},"MessageChannel")," if you can, but ",(0,a.kt)("inlineCode",{parentName:"p"},"BroadcastChannel")," is good in a pinch."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { BroadcastChannelNetworkAdapter } from "@automerge/automerge-repo-network-broadcastchannel"\n\nconst network = new BroadcastChannelNetworkAdapter()\n')))}d.isMDXComponent=!0}}]);